name: DESDEO-emo 

on:
  push:
    branches:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip
          restore-keys: ${{ runner.os }}-pip

  test:
    strategy:
      fail-fast: true
      matrix:
        os: [ "ubuntu-latest", "windows-latest", "macos-latest" ]
        python-version: [ "3.9", "3.10" ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      
      # Explicitly set PATH for Poetry on Windows
      - name: Set PATH for Poetry (Windows)
        if: runner.os == 'Windows'
        run: echo ".venv\Scripts" >> $GITHUB_PATH

      # Activate virtual environment and install dependencies
      - name: Activate virtual environment and install dependencies
        run: |
          if [[ "${{ runner.os }}" == "Windows" ]]; then
              .venv\Scripts\Activate
          else
              source .venv/bin/activate
          fi
          poetry install --no-interaction --no-root

      - name: Install library
        run: poetry install --no-interaction

      - name: Run tests
        run: |
          if [[ "${{ runner.os }}" == "Windows" ]]; then
              .venv\Scripts\Activate
          else
              source .venv/bin/activate
          fi
          pip install pytest-rerunfailures
          pytest tests/ --reruns 10
